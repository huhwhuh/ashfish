name: Release Deployment
on:
  push:
    branches:
      - release/**
jobs:
  semver:
    name: Determine SemVer
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.semver.outputs.version}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Determine Git Semantic Version
        id: semver
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          version_format: ${major}.${minor}.${patch}-${increment}
          search_commit_body: true

  lint:
    name: Check Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
  tests:
    name: Run Testing Suite
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Unit Tests
        run: npm run test:unit

      - name: Run Integration Tests
        run: npm run test:integ
  deploy:
    name: Run Deployment
    needs:
      - tests
      - semver
    runs-on: ubuntu-latest
    environment: release
    env:
      PROJECT_ID: ${{vars.PROJECT_ID}}
      REPO_NAME: ${{vars.REPO_NAME}}
      IMAGE_NAME: ${{vars.IMAGE_NAME}}
      REGION: ${{vars.REGION}}
      STAGE: ${{vars.STAGE}}
      VERSION: ${{needs.semver.outputs.version}}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Google Cloud
        uses: google-github-actions/auth@v2
        id: auth
        with:
          project_id: ${{env.PROJECT_ID}}
          token_format: access_token
          service_account: '242533372250-compute@developer.gserviceaccount.com'
          workload_identity_provider: 'projects/242533372250/locations/global/workloadIdentityPools/github-actions-pool/providers/ashfish-github-oidc '

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: https://us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build Docker Image and Push to GAR
        uses: docker/bake-action@v4
        with:
          targets: app
          push: true

      - name: Deploy to Google Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        id: deploy
        with:
          service: ${{env.IMAGE_NAME}}-${{env.STAGE}}
          image: '${{env.REGION}}-docker.pkg.dev/${{env.PROJECT_ID}}/${{env.REPO_NAME}}/${{env.STAGE}}/${{env.IMAGE_NAME}}:${{env.VERSION}}'