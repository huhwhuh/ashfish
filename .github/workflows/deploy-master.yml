name: Master Deployment
on:
  push:
    branches:
      - master
jobs:
  lint:
    name: Check Linter
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
  tests:
    name: Run Testing Suite
    needs:
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/bake-action@v4
        with:
          targets: test
          load: true

      - name: Run Unit Tests
        run: docker compose run --rm test npm run test:unit

      - name: Run Integration Tests
        run: docker compose run --rm test npm run test:integ
  deploy:
    name: Run Deployment
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine Git Semantic Version
        id: semver
        uses: PaulHatch/semantic-version@v5.4.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Google Cloud
        uses: google-github-actions/auth@v2
        id: auth
        with:
          project_id: 'ashfish'
          token_format: access_token
          service_account: '242533372250-compute@developer.gserviceaccount.com'
          workload_identity_provider: 'projects/242533372250/locations/global/workloadIdentityPools/github-actions-pool/providers/ashfish-github-oidc '

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: us-central1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build Docker Image
        uses: docker/bake-action@v4
        with:
          targets: app
          push: true
        env:
          TAG: ${{steps.semver.outputs.version}}

      - name: Deploy to Google Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        id: deploy
        with:
          service: 'ashfish'
          image: 'gcr.io/huhwhuh/ashfish:${{steps.semver.outputs.version}}'

      - name: Fake push to registry
        run: echo "Successfully fake deployed to container registry!"
