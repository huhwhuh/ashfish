services:
  dev:
    depends_on: [firebase]
    container_name: ashfish-dev
    build:
      context: .
      dockerfile: ./docker/test/Dockerfile
      target: base
    command: npm run dev -- --host
    environment:
      - FIREBASE_AUTH_EMULATOR_HOST=firebase:9099
    tty: true
    ports:
      - 5173:5173
    volumes:
      - .:/app
      - node_modules:/app/node_modules
  test:
    depends_on: [firebase]
    build:
      context: .
      dockerfile: ./docker/test/Dockerfile
      target: test
    command: npm run test
    environment:
      - FIREBASE_AUTH_EMULATOR_HOST=firebase:9099
    tty: true
  test-integ:
    depends_on: [firebase]
    build:
      context: .
      dockerfile: ./docker/test/Dockerfile
      target: test
    command: npm run test:integ
    environment:
      - FIREBASE_AUTH_EMULATOR_HOST=firebase:9099
    env_file:
      - .env
    tty: true
  test-watch:
    depends_on: [firebase]
    build:
      context: .
      dockerfile: ./docker/test/Dockerfile
      target: base
    command: npm run test:watch
    environment:
      - FIREBASE_AUTH_EMULATOR_HOST=firebase:9099
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    tty: true
  firebase:
    container_name: firebase
    image: andreysenov/firebase-tools
    user: node
    command: firebase emulators:start --project=${FB_PROJECT_ID} --config docker-firebase.json --import=./firebase/export --export-on-exit ./firebase/export
    ports:
      - 4000:4000
      - 4400:4400
      - 4500:4500
      - 8080:8080
      - 8085:8085
      - 9000:9000
      - 9005:9005
      - 9099:9099
      - 9150:9150
      - 9199:9199
    volumes:
      - .:/home/node
  app:
    image: '${REGION}-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/${STAGE}/${IMAGE_NAME}:${VERSION}'
    build:
      context: .
      dockerfile: ./docker/app/Dockerfile
      target: prod
    command: node build
    ports:
      - 3000:3000
volumes:
  node_modules:
